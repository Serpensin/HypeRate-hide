name: HypeRate Widget Docker Build

on:  
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/$REPO_OWNER/$REPO_NAME"
        PLATFORM_TAG=$(echo "${{ matrix.platform }}" | tr '/' '-')
        
        # Determine tags based on trigger
        if [[ "${{ github.event_name }}" == "release" ]]; then
          TAG="${{ github.event.release.tag_name }}"
          docker buildx build \
            --compress \
            --platform ${{ matrix.platform }} \
            --tag $IMAGE_NAME:$TAG-$PLATFORM_TAG \
            --tag $IMAGE_NAME:latest-$PLATFORM_TAG \
            --push .
        else
          # For workflow_dispatch or branch pushes
          TAG="latest"
          docker buildx build \
            --compress \
            --platform ${{ matrix.platform }} \
            --tag $IMAGE_NAME:$TAG-$PLATFORM_TAG \
            --push .
        fi
      shell: bash

  create-multiarch-manifest:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Multi-Architecture Manifest
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/$REPO_OWNER/$REPO_NAME"
        
        if [[ "${{ github.event_name }}" == "release" ]]; then
          TAG="${{ github.event.release.tag_name }}"
          # Create versioned tag manifest
          docker buildx imagetools create \
            --tag $IMAGE_NAME:$TAG \
            $IMAGE_NAME:$TAG-linux-amd64 \
            $IMAGE_NAME:$TAG-linux-arm64
          # Create latest tag manifest
          docker buildx imagetools create \
            --tag $IMAGE_NAME:latest \
            $IMAGE_NAME:latest-linux-amd64 \
            $IMAGE_NAME:latest-linux-arm64
        else
          # For workflow_dispatch
          docker buildx imagetools create \
            --tag $IMAGE_NAME:latest \
            $IMAGE_NAME:latest-linux-amd64 \
            $IMAGE_NAME:latest-linux-arm64
        fi
      shell: bash